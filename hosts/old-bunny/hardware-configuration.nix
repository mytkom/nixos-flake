# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/3f89fd3f-f685-46d3-85c0-9d9d2e8948cd";
      fsType = "ext4";
    };

  fileSystems."/boot" =
   { device = "/dev/disk/by-uuid/180E-8AA1";
     fsType = "vfat";
   };

  fileSystems."/var/lib/docker/overlay2/22a4aa8d46a394b2de2473061f1658e4049d97debe524c361d44bdcd97754585/merged" =
    { device = "overlay";
      fsType = "overlay";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/ece61bd1-b685-485d-a040-c4bee725ed90"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-51dbcfd36aa4.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-8b90d08e3382.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth6aa2a46.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20u10.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
